{"version":3,"file":"app~60001fbe.bundle.js","mappings":"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","sources":["webpack://restaurant-apps/./src/scripts/views/favorite-list.js","webpack://restaurant-apps/./src/scripts/views/favorite-restaurant-search-presenter.js","webpack://restaurant-apps/./src/scripts/views/favorite-restaurant-search-view.js","webpack://restaurant-apps/./src/scripts/views/favorite-restaurant-show-presenter.js"],"sourcesContent":["/* eslint-disable no-dupe-keys */\nimport { openDB } from 'idb';\nimport CONFIG from '../globals/config';\n\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\n\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n  upgrade(database) {\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\n  },\n});\n\nconst FavoriteRestaurantIdb = {\n  async getRestaurant(id) {\n    if (!id) {\n      return;\n    }\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\n  },\n  async getAllRestaurants() {\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\n  },\n  async putRestaurant(Restaurant) {\n    if (!Restaurant.hasOwnProperty('id')) {\n      return;\n    }\n\n    return (await dbPromise).put(OBJECT_STORE_NAME, Restaurant);\n  },\n  async deleteRestaurant(id) {\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\n  },\n  async searchRestaurants(query) {\n    const queryElement = document.getElementById('query');\n    queryElement.value = query;\n    queryElement.dispatchEvent(new Event('change'));\n  },\n  async searchRestaurants(query) {\n    return (await this.getAllRestaurants()).filter((restaurant) => {\n      const loweredCaseRestaurantTitle = (restaurant.title || '-').toLowerCase();\n      const jammedRestaurantTitle = loweredCaseRestaurantTitle.replace(/\\s/g, '');\n\n      const loweredCaseQuery = query.toLowerCase();\n      const jammedQuery = loweredCaseQuery.replace(/\\s/g, '');\n\n      return jammedRestaurantTitle.indexOf(jammedQuery) !== -1;\n    });\n  },\n};\n\nexport default FavoriteRestaurantIdb;\n","class FavoriteRestaurantSearchPresenter {\n  constructor({ favoriteRestaurants, view }) {\n    this._view = view;\n    this._listenToSearchRequestByUser();\n    this._favoriteRestaurants = favoriteRestaurants;\n  }\n\n  _listenToSearchRequestByUser() {\n    this._view.runWhenUserIsSearching((latestQuery) => {\n      this._searchRestaurants(latestQuery);\n    });\n  }\n\n  async _searchRestaurants(latestQuery) {\n    this._latestQuery = latestQuery.trim();\n\n    let foundRestaurants;\n    if (this._latestQuery.length > 0) {\n      foundRestaurants = await this._favoriteRestaurants.searchRestaurants(this._latestQuery);\n    } else {\n      foundRestaurants = await this._favoriteRestaurants.getAllRestaurants();\n    }\n\n    this._showFoundRestaurants(foundRestaurants);\n  }\n\n  _showFoundRestaurants(restaurants) {\n    this._view.showFavoriteRestaurants(restaurants);\n  }\n\n  get latestQuery() {\n    return this._latestQuery;\n  }\n}\n\nexport default FavoriteRestaurantSearchPresenter;\n","import { createRestaurantItemTemplate } from '../templates/template-creator';\n\nclass FavoriteRestaurantSearchView {\n  getTemplate() {\n    return `\n        <h2 class=\"favorite_heading\">Favorite Restaurant</h2>\n        <input id=\"query\" type=\"text\" placeholder=\"Search\">\n        <div class=\"favorite-content\" id=\"favorite-content\">\n            <div id=\"restaurants\" class=\"restaurants\"></div>\n        </div>\n      `;\n  }\n\n  _getEmptyRestaurantTemplate() {\n    return `\n        <div class=\"favorite-content\">\n          <div class=\"restaurant-item__not__found not_found\" tabindex=\"0\" >\n            <img class=\"not_found_img\" src=\"../public/images/not_found_image.jpg\" alt=\"not_found_image\"/>\n            <h4 class=\"nullnotif\">Restaurant favorite is not found</h4>\n          </div>\n        </div>\n      `;\n  }\n\n  runWhenUserIsSearching(callback) {\n    document.getElementById('query').addEventListener('change', (event) => {\n      callback(event.target.value);\n    });\n  }\n\n  showFavoriteRestaurants(restaurants) {\n    let html;\n\n    if (restaurants.length) {\n      const restaurantList = document.createElement('div');\n      restaurantList.setAttribute('id', 'restaurant-list');\n\n      html = restaurants.reduce((carry, restaurant) => carry.concat(createRestaurantItemTemplate(restaurant)), '');\n      restaurantList.innerHTML = html;\n\n      document.getElementById('restaurants').append(restaurantList);\n    } else {\n      html = this._getEmptyRestaurantTemplate();\n      document.getElementById('restaurants').innerHTML = html;\n    }\n\n    document.getElementById('restaurants').dispatchEvent(new Event('restaurants:updated'));\n  }\n}\n\nexport default FavoriteRestaurantSearchView;\n","class FavoriteRestaurantShowPresenter {\n  constructor({ view, favoriteRestaurants }) {\n    this._view = view;\n    this._favoriteRestaurants = favoriteRestaurants;\n\n    this._showFavoriteRestaurants();\n  }\n\n  async _showFavoriteRestaurants() {\n    const restaurants = await this._favoriteRestaurants.getAllRestaurants();\n    this._displayRestaurants(restaurants);\n  }\n\n  _displayRestaurants(restaurants) {\n    this._view.showFavoriteRestaurants(restaurants);\n  }\n}\n\nexport default FavoriteRestaurantShowPresenter;\n"],"names":["i","DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","id","get","getAllRestaurants","getAll","putRestaurant","Restaurant","hasOwnProperty","put","deleteRestaurant","searchRestaurants","query","queryElement","document","getElementById","value","dispatchEvent","Event","filter","restaurant","jammedRestaurantTitle","title","toLowerCase","replace","jammedQuery","indexOf","favoriteRestaurants","view","this","_view","_listenToSearchRequestByUser","_favoriteRestaurants","runWhenUserIsSearching","latestQuery","_searchRestaurants","_latestQuery","trim","length","foundRestaurants","_showFoundRestaurants","restaurants","showFavoriteRestaurants","callback","addEventListener","event","target","html","restaurantList","createElement","setAttribute","reduce","carry","concat","createRestaurantItemTemplate","innerHTML","append","_getEmptyRestaurantTemplate","_showFavoriteRestaurants","_displayRestaurants"],"sourceRoot":""}